create or replace database dannys_diner;

use dannys_diner;
USE SCHEMA PUBLIC;


CREATE TABLE sales (
  "customer_id" VARCHAR(1),
  "order_date" DATE,
  "product_id" INTEGER
);

INSERT INTO sales
  ("customer_id", "order_date", "product_id")
VALUES
  ('A', '2021-01-01', '1'),
  ('A', '2021-01-01', '2'),
  ('A', '2021-01-07', '2'),
  ('A', '2021-01-10', '3'),
  ('A', '2021-01-11', '3'),
  ('A', '2021-01-11', '3'),
  ('B', '2021-01-01', '2'),
  ('B', '2021-01-02', '2'),
  ('B', '2021-01-04', '1'),
  ('B', '2021-01-11', '1'),
  ('B', '2021-01-16', '3'),
  ('B', '2021-02-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-07', '3');
 
--drop table sales;
CREATE TABLE menu (
  "product_id" INTEGER,
  "product_name" VARCHAR(5),
  "price" INTEGER
);

INSERT INTO menu
  ("product_id", "product_name", "price")
VALUES
  ('1', 'sushi', '10'),
  ('2', 'curry', '15'),
  ('3', 'ramen', '12');
-- drop table menu;

CREATE TABLE members (
  "customer_id" VARCHAR(1),
  "join_date" DATE
);

INSERT INTO members
  ("customer_id", "join_date")
VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09');
--drop table members;
---What is the total amount each customer spent at the restaurant?
select * from sales;
select * from menu;
select * from members;

SELECT s."customer_id", sum(m."price")  FROM sales s JOIN menu m ON s."product_id" = m."product_id" group by s."customer_id";

--How many days has each customer visited the restaurant?

select "customer_id", count(DISTINCT("order_date")) from sales group by "customer_id";

--What was the first item from the menu purchased by each customer?
with first_order as 
(SELECT 
rank()over(partition by s."customer_id" order by s."order_date" ) as ranking ,
s."customer_id",(s."order_date"),m."product_name"  FROM sales s JOIN menu m ON s."product_id" = m."product_id" )
select * from first_order where RANKING=1;

--What is the most purchased item on the menu and how many times was it purchased by all customers?

SELECT  m."product_name" ,count(m."product_name") FROM sales s   JOIN menu m ON s."product_id" = m."product_id" group by m."product_name" limit 1;

--Which item was the most popular for each customer?

with most_popular as

(SELECT  s."customer_id",count(m."product_id"),m."product_name",DENSE_RANK() OVER (PARTITION by s."customer_id" ORDER BY COUNT(m."product_id") DESC ) as order_rank FROM sales s JOIN menu m ON s."product_id" = m."product_id" group by s."customer_id",m."product_name")
select * from  most_popular where ORDER_RANK=1; 


--Which item was purchased first by the customer after they became a member?
with order_after_member as
(SELECT s.*,t.*,m.*, rank()over(PARTITION by s."customer_id" ORDER BY s."order_date" asc )as row_num FROM sales s left outer JOIN members t ON s."customer_id" = t."customer_id" join menu m on s."product_id"=m."product_id" AND s."order_date"> t."join_date") 

select * from order_after_member where row_num=1;

--Which item was purchased just before the customer became a member?
with order_before_member as
(SELECT s.*,t.*,m.*, rank()over(PARTITION by s."customer_id" ORDER BY s."order_date" desc )as row_num FROM sales s left outer JOIN members t ON s."customer_id" = t."customer_id" join menu m on s."product_id"=m."product_id" AND s."order_date"< t."join_date") 
select * from order_before_member where row_num=1;


--What is the total items and amount spent for each member before they became a member?

(SELECT s."customer_id",count(s."product_id"),sum(m."price") FROM sales s left outer JOIN members t ON s."customer_id" = t."customer_id" join menu m on s."product_id"=m."product_id" AND s."order_date"< t."join_date" group by s."customer_id" );

--If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?


SELECT s."customer_id",(s."product_id"),sum(m."price") FROM sales s left outer JOIN members t ON s."customer_id" = t."customer_id" join menu m on s."product_id"=m."product_id" group by s."customer_id" ,(s."product_id");



with points_cte as
(select menu."product_id",
CASE
WHEN "product_id"=1 THEN "price"*20

ELSE "price"*10
END as points 
from menu)

select s."customer_id",sum(points_cte.points) from sales s join points_cte on s."product_id"=points_cte."product_id" group by s."customer_id" order by s."customer_id";

--In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?



WITH points_cte2 AS (
    SELECT
        s."customer_id",
        SUM(
            CASE
                WHEN m."product_id" = 1 THEN m."price" * 20
                WHEN s."order_date" BETWEEN T."join_date" AND (T."join_date" + 6) THEN m."price" * 20
                ELSE m."price" * 10
            END
        ) AS points
    FROM
        menu m
    JOIN sales s ON m."product_id" = s."product_id"
    JOIN members T ON s."customer_id" = T."customer_id"
    WHERE T."join_date" <= '2021-01-31'
    GROUP BY s."customer_id"
)

SELECT
    "customer_id",
    SUM(points) AS total_points
FROM
    points_cte2
GROUP BY "customer_id"
ORDER BY "customer_id";





























